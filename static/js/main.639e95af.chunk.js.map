{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","contractNumber","someNumber","someText","selection1","selection2","event","setState","target","value","console","log","react_default","a","createElement","className","id","method","action","placeholder","onChange","updateContractNumber","bind","type","maxLength","name","updateSelection1","updateSomeNumber","updateSelection2","updateSomeText","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.639e95af.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t// Each input value is initialized to null\n\n\t\t\t// text input\n\t\t\tcontractNumber: \"\",\n\t\t\tsomeNumber: \"\",\n\t\t\tsomeText: \"\",\n\t\t\t//drop down input\n\t\t\tselection1: \"\",\n\t\t\tselection2: \"\"\n\t\t};\n\t}\n\n\t// The functions below update the input value everytime it\n\t// is changed and stored in the above variables\n\n\tupdateContractNumber(event) {\n\t\tthis.setState({ contractNumber: event.target.value });\n\t\tconsole.log(event.target.value);\n\t}\n\n\tupdateSomeNumber(event) {\n\t\tthis.setState({ someNumber: event.target.value });\n\t\tconsole.log(event.target.value);\n\t}\n\n\tupdateSomeText(event) {\n\t\tthis.setState({ someText: event.target.value });\n\t\tconsole.log(event.target.value);\n\t}\n\n\tupdateSelection1(event) {\n\t\tthis.setState({ selection1: event.target.value });\n\t\tconsole.log(event.target.value);\n\t}\n\n\tupdateSelection2(event) {\n\t\tthis.setState({ selection2: event.target.value });\n\t\tconsole.log(event.target.value);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<h1>Smart Contract Editor</h1>\n\t\t\t\t<form id=\"form_29559\" className=\"appnitro\" method=\"post\" action=\"\">\n\t\t\t\t\t<div className=\"form_description\">\n\t\t\t\t\t\t<h2>Smart Contract Editor</h2>\n\t\t\t\t\t\t<p>Welcome to the Future</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ul className=\"list\">\n\t\t\t\t\t\t<li id=\"li_1\">\n\t\t\t\t\t\t\t<label className=\"description\">\n\t\t\t\t\t\t\t\tPlease enter the contract number\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tplaceholder=\"Contract number\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.contractNumber}\n\t\t\t\t\t\t\t\t\tonChange={this.updateContractNumber.bind(this)}\n\t\t\t\t\t\t\t\t\tclassName=\"contract\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tmaxLength=\"255\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li className=\"section_break\">\n\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\tOnce the contract is entered, the user would press submit and\n\t\t\t\t\t\t\t\tsee the content below based on the contract having an array,\n\t\t\t\t\t\t\t\tnumber, enum, and text{\" \"}\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t<p />\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li id=\"li_5\">\n\t\t\t\t\t\t\t<label className=\"description\">\n\t\t\t\t\t\t\t\tViewable Array Content - If content exists for the array value,\n\t\t\t\t\t\t\t\tpopulate the fields below{\" \"}\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\tclassName=\"element select medium\"\n\t\t\t\t\t\t\t\t\tid=\"element_5\"\n\t\t\t\t\t\t\t\t\tname=\"element_5\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.selection1}\n\t\t\t\t\t\t\t\t\tonChange={this.updateSelection1.bind(this)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<option value=\"1\">Choose</option>\n\t\t\t\t\t\t\t\t\t<option value=\"2\">Computer Science</option>\n\t\t\t\t\t\t\t\t\t<option value=\"3\">IT</option>\n\t\t\t\t\t\t\t\t\t<option value=\"4\">IS</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li id=\"li_3\">\n\t\t\t\t\t\t\t<label className=\"description\">Some number </label>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tid=\"element_3\"\n\t\t\t\t\t\t\t\t\tname=\"element_3\"\n\t\t\t\t\t\t\t\t\tclassName=\"element text medium\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tmaxLength=\"255\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.someNumber}\n\t\t\t\t\t\t\t\t\tonChange={this.updateSomeNumber.bind(this)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li id=\"li_6\">\n\t\t\t\t\t\t\t<label className=\"description\">Some Enum </label>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\tclassName=\"element select medium\"\n\t\t\t\t\t\t\t\t\tid=\"element_6\"\n\t\t\t\t\t\t\t\t\tname=\"element_6\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.selection2}\n\t\t\t\t\t\t\t\t\tonChange={this.updateSelection2.bind(this)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<option value=\"1\">First option</option>\n\t\t\t\t\t\t\t\t\t<option value=\"2\">Second option</option>\n\t\t\t\t\t\t\t\t\t<option value=\"3\">Third option</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li id=\"li_4\">\n\t\t\t\t\t\t\t<label className=\"description\">Some Text </label>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tid=\"element_4\"\n\t\t\t\t\t\t\t\t\tname=\"element_4\"\n\t\t\t\t\t\t\t\t\tclassName=\"element text medium\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tmaxLength=\"255\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.someText}\n\t\t\t\t\t\t\t\t\tonChange={this.updateSomeText.bind(this)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\n\t\t\t\t\t\t<li className=\"buttons\">\n\t\t\t\t\t\t\t<input type=\"hidden\" name=\"form_id\" value=\"29559\" />\n\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"saveForm\"\n\t\t\t\t\t\t\t\tclassName=\"button_text\"\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tname=\"submit\"\n\t\t\t\t\t\t\t\tvalue=\"Submit\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}